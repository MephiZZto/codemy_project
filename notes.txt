superuser: admin
pw: 123

#install apps pip
pip install django

#see give out installed apps
pip freeze

#create start django project
django-admin.py startproject PROJECTNAME

#run webserver
python manage.py runserver

#create app in django project
python manage.py startapp APPNAME

-edit settings.py in PROJECTNAME and add app to INSTALLED_APPS =
-edit PROJECTNAME/urls.py add include include
-edit PROJECTNAME/urls.py path('', include('APPNAME.urls'))
-edit APPNAME/urls.py path('', views.home, name="home"),
-create urls.py in APPNAME folder and add path('', views.home, name="home")
-edit views.py in APPNAME folder
-create templates folder and an APPNAME folder inside
-create home.html in templates/events and fill with html

#get request
-urls.py path('<int:year>/<str:month>', views.home, name="home")
-view def home(request, year, month):
	return render(request, 'APPNAME/home.html', {
		"year": year,
		"month": month,
	})
-template {{ month }}</br>{{ year }}

#make extended templates {% block content %}{% endblock %}
- {% extends 'events/base.html' %}

#add models for database makemirations migrate after

#add things to admin site in admin.py register models

#change admin area view in admin.py

#add forms
- create forms.py file in App import libs and:
	class NAMEXX(ModelForm):
		class Meta:
		model = MODELNAME
		#fields = "__all__"
- in views.py add forms
def VIEWNAME(request):
	form = NAMEXX
	return render(request, 'path/file.html', {'form':form})
- in file.html for view
	<form action="" method="POST">
		{% csrf_token %}
		{{ form.as_p }}
		<input type="submit" value="Submit" class="btn btn-secondary"\>
	</form>
#to change the django form we can add fixed variables in class Meta: in forms.py
		#labels (discription) with
		labels = {'name': 'Venue Name', 'email': ''}
		#css for the form elements with
		widgets = {'name': forms.TextInput(attrs={'class':'form-control', 'placeholder':'Venue Name'}),}
#to auto fill a form with search use instance=MODEL.objects.get(pk=venue_id)
